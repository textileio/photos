# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do
  before_all do
    setup_circle_ci
  end

  desc "Runs all the tests"
  lane :test do
    scan(
      scheme: "TextilePhotos"
    )
  end

  desc "Push a new beta build to TestFlight"
  desc "This will also make sure the profile is up to date"
  lane :beta do
    # Config that came from 
    # https://raw.githubusercontent.com/CircleCI-Public/circleci-demo-react-native/master/ios/fastlane/Fastfile
    # -----------------------------------------------------------------------------------------------------------
    match(type: "appstore") # more information: https://codesigning.guide
    #gym # Build your app - more options available
    #pilot
    ## sh "your_script.sh"
    ## You can also use other beta testing services here (run `fastlane actions`)

    # Config that came with fastlane init
    # ----------------------------------------------------------------------------
    versionNumber = get_version_number
    newBuildNumber = latest_testflight_build_number(version: versionNumber) + 1
    increment_build_number(
      build_number: newBuildNumber,
      xcodeproj: "TextilePhotos.xcodeproj"
    )
    gym(workspace: "TextilePhotos.xcworkspace", scheme: "TextilePhotos")
    changelog_from_git_commits
    upload_to_testflight(skip_waiting_for_build_processing: false)
    upload_symbols_to_crashlytics(dsym_path: "./TextilePhotos.app.dSYM.zip", api_token: ENV['FABRIC_API_TOKEN'])
    sh("git", "stash")
    git_pull
    sh("git", "stash", "pop")
    commit_version_bump(
      message: "Build number bump to " + newBuildNumber.to_s + " [skip ci]",
      xcodeproj: "TextilePhotos.xcodeproj",
      force: true
    )
    add_git_tag(tag: "builds/iosbeta/" + versionNumber.to_s + "(" + newBuildNumber.to_s + ")")
    push_to_git_remote
  end

  desc "Deploy a new version to the App Store"
  lane :release do
    match(type: "appstore")
    # snapshot
    gym # Build your app - more options available
    deliver(force: true)
    # frameit
  end

  after_all do |lane|
    # This block is called, only if the executed lane was successful

    # slack(
    #   message: "Successfully deployed new App Update."
    # )
  end

  error do |lane, exception|
    # slack(
    #   message: exception.message,
    #   success: false
    # )
  end
end
