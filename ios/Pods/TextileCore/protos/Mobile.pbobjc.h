// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mobile.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class Directory;
@class Error;
@class QueryResult;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum MobileEventType

typedef GPB_ENUM(MobileEventType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  MobileEventType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  MobileEventType_NodeStart = 0,
  MobileEventType_NodeOnline = 1,
  MobileEventType_NodeStop = 2,
  MobileEventType_WalletUpdate = 10,
  MobileEventType_ThreadUpdate = 11,
  MobileEventType_Notification = 12,
  MobileEventType_QueryResponse = 20,
};

GPBEnumDescriptor *MobileEventType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL MobileEventType_IsValidValue(int32_t value);

#pragma mark - Enum MobileQueryEvent_Type

typedef GPB_ENUM(MobileQueryEvent_Type) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  MobileQueryEvent_Type_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  MobileQueryEvent_Type_Data = 0,
  MobileQueryEvent_Type_Done = 1,
  MobileQueryEvent_Type_Error = 2,
};

GPBEnumDescriptor *MobileQueryEvent_Type_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL MobileQueryEvent_Type_IsValidValue(int32_t value);

#pragma mark - MobileRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface MobileRoot : GPBRootObject
@end

#pragma mark - MobileWalletAccount

typedef GPB_ENUM(MobileWalletAccount_FieldNumber) {
  MobileWalletAccount_FieldNumber_Seed = 1,
  MobileWalletAccount_FieldNumber_Address = 2,
};

@interface MobileWalletAccount : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *seed;

@property(nonatomic, readwrite, copy, null_resettable) NSString *address;

@end

#pragma mark - MobilePreparedFiles

typedef GPB_ENUM(MobilePreparedFiles_FieldNumber) {
  MobilePreparedFiles_FieldNumber_Dir = 1,
  MobilePreparedFiles_FieldNumber_Pin = 2,
};

@interface MobilePreparedFiles : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Directory *dir;
/** Test to see if @c dir has been set. */
@property(nonatomic, readwrite) BOOL hasDir;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableDictionary<NSString*, NSString*> *pin;
/** The number of items in @c pin without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger pin_Count;

@end

#pragma mark - MobileQueryEvent

typedef GPB_ENUM(MobileQueryEvent_FieldNumber) {
  MobileQueryEvent_FieldNumber_Id_p = 1,
  MobileQueryEvent_FieldNumber_Type = 2,
  MobileQueryEvent_FieldNumber_Data_p = 3,
  MobileQueryEvent_FieldNumber_Error = 4,
};

@interface MobileQueryEvent : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

@property(nonatomic, readwrite) MobileQueryEvent_Type type;

@property(nonatomic, readwrite, strong, null_resettable) QueryResult *data_p;
/** Test to see if @c data_p has been set. */
@property(nonatomic, readwrite) BOOL hasData_p;

@property(nonatomic, readwrite, strong, null_resettable) Error *error;
/** Test to see if @c error has been set. */
@property(nonatomic, readwrite) BOOL hasError;

@end

/**
 * Fetches the raw value of a @c MobileQueryEvent's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t MobileQueryEvent_Type_RawValue(MobileQueryEvent *message);
/**
 * Sets the raw value of an @c MobileQueryEvent's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetMobileQueryEvent_Type_RawValue(MobileQueryEvent *message, int32_t value);

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
