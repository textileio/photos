# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:android)

platform :android do

  desc "Runs all the tests"
  lane :test do
    gradle(
      task: "app:test",
      flags: "--init-script init.gradle"
    )
  end

  desc "Push internal test build to Fabric"
  lane :adhoc do
    increment_version_code(app_project_dir: "./app", version_code: ENV['CIRCLE_BUILD_NUM'])
    gradle(
      task: "clean assembleRelease",
      flags: "--init-script init.gradle --no-daemon --max-workers=2"
    )
    crashlytics(
      api_token: ENV['FABRIC_API_TOKEN'],
      build_secret: ENV['FABRIC_BUILD_SECRET'],
      groups: 'textile-internal',
      apk_path: './app/build/outputs/apk/release/app-arm64-v8a-release.apk'
    )
  end

  desc "Submit a new Beta Build to Crashlytics Beta"
  lane :beta do
    versionCodes = google_play_track_version_codes(track: "internal")
    increment_version_code(app_project_dir: "./app",version_code: versionCodes[0] + 1)
    gradle(
      task: "clean assembleRelease",
      flags: "--init-script init.gradle"
    )
    # changelog_from_git_commits
    supply(
      track: "internal"
    )
    versionName = get_version_name(
      gradle_file_path: "app/build.gradle"
    )
    versionCode = get_version_code(
      gradle_file_path:"app/build.gradle"
    )
    add_git_tag(
      tag: "builds/androidbeta/" + versionName.to_s + "(" + versionCode.to_s + ")"
    )
    push_to_git_remote
  end

  desc "Submit a new release to Google Play Store"
  lane :release do
    tag = ENV['CIRCLE_TAG'] # looks like android_1.2.3_456
    parts = tag.split("_")
    increment_version_name(app_project_dir: "./app", version_name: parts[1])
    increment_version_code(app_project_dir: "./app", version_code: parts[2])
    gradle(
      task: "clean assembleRelease",
      flags: "--init-script init.gradle"
    )
    supply(
      track: "beta",
      apk_paths: ["./app/build/outputs/apk/release/app-arm64-v8a-release.apk", "./app/build/outputs/apk/release/app-armeabi-v7a-release.apk"]
    )
  end

  desc "Deploy a new version to the Google Play"
  lane :deploy do
    #gradle(task: "clean assembleRelease")
    #upload_to_play_store
    #supply # from https://github.com/CircleCI-Public/circleci-demo-react-native/blob/master/android/fastlane/Fastfile
  end

  after_all do |lane|
    # This block is called, only if the executed lane was successful

    # slack(
    #   message: "Successfully deployed new App Update."
    # )
  end

  error do |lane, exception|
    # slack(
    #   message: exception.message,
    #   success: false
    # )
  end
end
