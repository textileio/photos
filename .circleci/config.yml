version: 2
jobs:
  node:
    working_directory: ~/textile-mobile
    docker:
      - image: circleci/node:8
    steps:
      - checkout

      - restore_cache:
          key: yarn-v1-{{ checksum "yarn.lock" }}-{{ arch }}

      - restore_cache:
          key: node-v1-{{ checksum "package.json" }}-{{ arch }}

      - run: yarn install

      - save_cache:
          key: yarn-v1-{{ checksum "yarn.lock" }}-{{ arch }}
          paths:
            - ~/.cache/yarn

      - save_cache:
          key: node-v1-{{ checksum "package.json" }}-{{ arch }}
          paths:
            - node_modules

      - run:
          name: jest tests
          command: |
            mkdir -p test-results/jest
            yarn run test
          environment:
            JEST_JUNIT_OUTPUT: test-results/jest/junit.xml

      - persist_to_workspace:
          root: ~/textile-mobile
          paths:
            - node_modules

      - store_test_results:
          path: test-results

      - store_artifacts:
          path: test-results

  android:
    environment:
      _JAVA_OPTIONS: "-Xmx512m"
      GRADLE_OPTS: "-Xmx512m"
      REACT_NATIVE_MAX_WORKERS: "2"
      LC_ALL: en_US.UTF-8
      LANG: en_US.UTF-8
    working_directory: ~/textile-mobile/android
    docker:
      - image: circleci/android:api-26-node8-alpha
    steps:
      - checkout:
          path: ~/textile-mobile

      - attach_workspace:
          at: ~/textile-mobile

    #   - restore_cache:
    #       key: bundle-v1-{{ checksum "Gemfile.lock" }}-{{ arch }}

      - run: bundle install

    #   - save_cache:
    #       key: bundle-v1-{{ checksum "Gemfile.lock" }}-{{ arch }}
    #       paths:
    #         - vendor/bundle

      - run:
          name: fastlane tests
          command: |
            mkdir -p test-results/fastlane
            bundle exec fastlane test
            mv fastlane/report.xml test-results/fastlane

      - store_test_results:
          path: test-results

      - store_artifacts:
          path: test-results

  android-beta:
    environment:
      _JAVA_OPTIONS: "-Xmx512m"
      GRADLE_OPTS: "-Xmx512m"
      REACT_NATIVE_MAX_WORKERS: "2"
      LC_ALL: en_US.UTF-8
      LANG: en_US.UTF-8
    working_directory: ~/textile-mobile/android
    docker:
      - image: circleci/android:api-26-node8-alpha
    steps:
      - checkout:
          path: ~/textile-mobile

      - run: git config --global user.name $CIRCLE_USERNAME
      - run: git config --global user.email "ops@textile.io" # TODO: Use a variable here
      - run: git branch --set-upstream-to=origin/$CIRCLE_BRANCH $CIRCLE_BRANCH

      - attach_workspace:
          at: ~/textile-mobile

    #   - restore_cache:
    #       key: bundle-v1-{{ checksum "Gemfile.lock" }}-{{ arch }}

      - run: bundle install

    #   - save_cache:
    #       key: bundle-v1-{{ checksum "Gemfile.lock" }}-{{ arch }}
    #       paths:
    #         - vendor/bundle

      - run:
          command: echo $ANDROID_KEYSTORE_BASE64 | base64 --decode >> $ANDROID_KEYSTORE

      - run:
          command: echo $TEXTILE_ENV_CONTENTS_BASE64 | base64 --decode > .env.production
          working_directory: ~/textile-mobile

      - run:
          command: bundle exec fastlane beta --verbose

  ios:
    macos:
      xcode: "9.4.0"
    environment:
      LC_ALL: en_US.UTF-8
      LANG: en_US.UTF-8
    working_directory: ~/textile-mobile

    # use a --login shell so our "set Ruby version" command gets picked up for later steps
    shell: /bin/bash --login -o pipefail

    steps:
      - checkout

      - run:
          name: set Ruby version
          command:  echo "ruby-2.4" > ~/.ruby-version

      - restore_cache:
          key: yarn-v1-{{ checksum "yarn.lock" }}-{{ arch }}

      - restore_cache:
          key: node-v1-{{ checksum "package.json" }}-{{ arch }}

      # not using a workspace here as Node and Yarn versions
      # differ between our macOS executor image and the Docker containers above
      - run: yarn install --ignore-engines

      - save_cache:
          key: yarn-v1-{{ checksum "yarn.lock" }}-{{ arch }}
          paths:
            - ~/.cache/yarn

      - save_cache:
          key: node-v1-{{ checksum "package.json" }}-{{ arch }}
          paths:
            - node_modules

      - restore_cache:
          key: bundle-v1-{{ checksum "ios/Gemfile.lock" }}-{{ arch }}

      - run:
          command: bundle install
          working_directory: ios

      - save_cache:
          key: bundle-v1-{{ checksum "ios/Gemfile.lock" }}-{{ arch }}
          paths:
            - vendor/bundle

      - run:
          command: bundle exec fastlane test
          working_directory: ios

      - run:
          name: set up test results
          working_directory: ios
          when: always
          command: |
            mkdir -p test-results/fastlane test-results/xcode
            mv fastlane/report.xml test-results/fastlane
            mv fastlane/test_output/report.junit test-results/xcode/junit.xml

      - store_test_results:
          path: ios/test-results

      - store_artifacts:
          path: ios/test-results

  ios-beta:
    macos:
      xcode: "9.4.0"
    environment:
      LC_ALL: en_US.UTF-8
      LANG: en_US.UTF-8
    working_directory: ~/textile-mobile

    # use a --login shell so our "set Ruby version" command gets picked up for later steps
    shell: /bin/bash --login -o pipefail

    steps:
      - checkout

      - run: git config --global user.name $CIRCLE_USERNAME
      - run: git config --global user.email "ops@textile.io" # TODO: Use a variable here
      - run: git branch --set-upstream-to=origin/$CIRCLE_BRANCH $CIRCLE_BRANCH

      - run:
          name: set Ruby version
          command:  echo "ruby-2.4" > ~/.ruby-version

      - restore_cache:
          key: yarn-v1-{{ checksum "yarn.lock" }}-{{ arch }}

      - restore_cache:
          key: node-v1-{{ checksum "package.json" }}-{{ arch }}

      # not using a workspace here as Node and Yarn versions
      # differ between our macOS executor image and the Docker containers above
      - run: yarn install --ignore-engines

      - save_cache:
          key: yarn-v1-{{ checksum "yarn.lock" }}-{{ arch }}
          paths:
            - ~/.cache/yarn

      - save_cache:
          key: node-v1-{{ checksum "package.json" }}-{{ arch }}
          paths:
            - node_modules

      - restore_cache:
          key: bundle-v1-{{ checksum "ios/Gemfile.lock" }}-{{ arch }}

      - run:
          command: bundle install
          working_directory: ios

      - save_cache:
          key: bundle-v1-{{ checksum "ios/Gemfile.lock" }}-{{ arch }}
          paths:
            - vendor/bundle

      - run:
          command: echo $TEXTILE_ENV_CONTENTS_BASE64 | base64 --decode > .env.production

      - run:
          command: bundle exec fastlane beta
          working_directory: ios

      - run:
          command: npm install -g react-native-cli appcenter-cli

      - run:
          command: react-native bundle --entry-file index.js --platform ios --dev false --reset-cache --bundle-output unused.jsbundle --sourcemap-output index.ios.map

      - store_artifacts:
          path: ./index.ios.map

      - store_artifacts:
          path: ./ios/TextilePhotos.app.dSYM.zip

      - store_artifacts:
          path: ./ios/TextilePhotos.ipa

      - run:
          command: appcenter crashes upload-symbols -m ./index.ios.map -s ./ios/TextilePhotos.app.dSYM.zip  --app $APP_CENTER_APP --token $APP_CENTER_API_TOKEN --disable-telemetry

workflows:
  version: 2
  node-android-ios:
    jobs:
      - node
      - android:
          requires:
            - node
      - ios:
          requires:
            - node
      - ios-beta:
          requires:
            - ios
          filters:
            branches:
              only:
                - master
      - android-beta:
          requires:
            - android
          filters:
            branches:
              only:
                - master
